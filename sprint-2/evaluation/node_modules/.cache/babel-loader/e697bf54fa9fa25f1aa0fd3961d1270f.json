{"ast":null,"code":"import _slicedToArray from \"C:/Users/sneha/FT-Web-15/unit-5/sneha_fw15_516/unit-5/sprint-2/evaluation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _readOnlyError from \"C:/Users/sneha/FT-Web-15/unit-5/sneha_fw15_516/unit-5/sprint-2/evaluation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sneha\\\\FT-Web-15\\\\unit-5\\\\sneha_fw15_516\\\\unit-5\\\\sprint-2\\\\evaluation\\\\src\\\\Context\\\\AuthContext.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var AuthContext = /*#__PURE__*/createContext();\nexport var AuthContextProvider = function AuthContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAuth = _useState2[0],\n      setAuth = _useState2[1];\n\n  function toggleAuth() {\n    isAuth === false ? (true, _readOnlyError(\"isAuth\")) : (false, _readOnlyError(\"isAuth\"));\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: [isAuth, toggleAuth],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, _this);\n};\n\n_s(AuthContextProvider, \"UVbBWRIvUe34Qj4y727MM2P1pDQ=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useState","AuthContext","AuthContextProvider","children","isAuth","setAuth","toggleAuth"],"sources":["C:/Users/sneha/FT-Web-15/unit-5/sneha_fw15_516/unit-5/sprint-2/evaluation/src/Context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\n\r\n export const AuthContext=createContext();\r\n\r\n\r\n export const AuthContextProvider=({children})=>{\r\n   \r\n    const [isAuth,setAuth]=useState(false)\r\n    \r\n    function toggleAuth(){\r\n     isAuth===false? isAuth=true :isAuth=false;\r\n    }\r\n\r\n    return <AuthContext.Provider value ={[isAuth,toggleAuth]}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n}"],"mappings":";;;;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAGC,OAAO,IAAMC,WAAW,gBAACF,aAAa,EAA/B;AAGP,OAAO,IAAMG,mBAAmB,GAAC,SAApBA,mBAAoB,OAAc;EAAA;;EAAA,IAAZC,QAAY,QAAZA,QAAY;;EAE5C,gBAAuBH,QAAQ,CAAC,KAAD,CAA/B;EAAA;EAAA,IAAOI,MAAP;EAAA,IAAcC,OAAd;;EAEA,SAASC,UAAT,GAAqB;IACpBF,MAAM,KAAG,KAAT,IAAuB,IAAvB,+BAAoC,KAApC;EACA;;EAED,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAG,CAACA,MAAD,EAAQE,UAAR,CAA9B;IAAA,UACJH;EADI;IAAA;IAAA;IAAA;EAAA,SAAP;AAGH,CAXO;;GAAMD,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}